'use strict';

console.message = (message, color = 'black', weight = 'normal') => {
    console.log('%c ' + message, `color: ${color}; font-weight: ${weight}`)
}

const selfTestResult = [
    ['Слайдер изображений в секции destinations.', 50, true, [
        ['На десктоп варианте при клике на урезанную картинку слева или справа изображение меняется по принципу карусели (например если нажать правую картинку та что была в центре на уезжает налево, а та что была видна наполовину оказывается справа). Слайдер может быть как конечным так и бесконечным - данный критерий не должен влиять на оценку.',
            20, true
        ],
        ['Три точки внизу отображают "номер слайда", то есть каждому слайду соответствует свой кружочек, который становится активным при нахождении соответствующего ему слайда в центре. На мобильном варианте картинка одна, но поверх нее появляются стрелочки навигации (можно сделать как карусель или же затемнять кнопку если слайдер достиг края).',
            20, true
        ],
        ['Анимации плавного перемещения для слайдера.', 10, true],
    ]],
    ['Нажатие на кнопку Login (кнопка Account в мобильной версии) показывает сверстанный логин попап.', 50, true, [
        ['Логин попап соответствует верстке его закрытие происходит при клике вне попапа.', 25, true],
        ['Логин попап имеет 2 инпута (email и пароль) при нажатии на кнопку Sign In показывается браузерный алерт с введенными данными (для реализации можно использовать тег).', 25, true],
    ]],
    ['Нажатие на кнопку Register на Login попапе меняет разметку попапа на разметку Sign Up попапа согласно макету (То есть нажатие не закрывает модал а просто меняет его наполнение).', 25, true
    ]
]

console.message('Хорошего дня!', 'orange', 'bold');

let msg = '';
msg += 'Требования к заданию выполнены полностью. Score: 125/125.' + '\n';

selfTestResult.forEach((part, index) => {
    let [message, score, isDone, subParts] = part;
    msg += `${index + 1}. ${message} ${isDone ? '+' + score  + '\n': ''}`;
    if (subParts) {
        subParts.forEach((subPart, index) => {
            let [message, score, isDone] = subPart;
            msg += `\t -  ${message} ${isDone ? '+' + score + '\n': ''}`;
        })
    }
})

console.log(msg);
